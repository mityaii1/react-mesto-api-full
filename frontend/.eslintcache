[{"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/serviceWorker.js":"1","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Register.js":"2","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Footer.js":"3","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/EditProfilePopup.js":"4","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/ImagePopup.js":"5","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/AddPlacePopup.js":"6","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/apiAuth.js":"7","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js":"8","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Card.js":"9","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/App.js":"10","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js":"11","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Header.js":"12","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Login.js":"13","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/api.js":"14","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/PopupWithForm.js":"15","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/token.js":"16","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Main.js":"17","/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/InfoTooltip.js":"18"},{"size":5086,"mtime":1601148499437,"results":"19","hashOfConfig":"20"},{"size":2133,"mtime":1605376804665,"results":"21","hashOfConfig":"20"},{"size":221,"mtime":1601148499430,"results":"22","hashOfConfig":"20"},{"size":1887,"mtime":1601148499429,"results":"23","hashOfConfig":"20"},{"size":721,"mtime":1601148499430,"results":"24","hashOfConfig":"20"},{"size":1561,"mtime":1601148499427,"results":"25","hashOfConfig":"20"},{"size":1425,"mtime":1606323907752,"results":"26","hashOfConfig":"20"},{"size":83,"mtime":1601148499432,"results":"27","hashOfConfig":"20"},{"size":1351,"mtime":1606239653714,"results":"28","hashOfConfig":"20"},{"size":8013,"mtime":1606235121781,"results":"29","hashOfConfig":"20"},{"size":959,"mtime":1601148499429,"results":"30","hashOfConfig":"20"},{"size":870,"mtime":1605032872699,"results":"31","hashOfConfig":"20"},{"size":2203,"mtime":1606235087991,"results":"32","hashOfConfig":"20"},{"size":2436,"mtime":1606323896812,"results":"33","hashOfConfig":"20"},{"size":782,"mtime":1601148499431,"results":"34","hashOfConfig":"20"},{"size":246,"mtime":1604945723275,"results":"35","hashOfConfig":"20"},{"size":1703,"mtime":1601148499431,"results":"36","hashOfConfig":"20"},{"size":757,"mtime":1604841085140,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"njkkw3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/serviceWorker.js",[],["80","81"],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Register.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Footer.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/EditProfilePopup.js",[],["82","83"],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/ImagePopup.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/AddPlacePopup.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/apiAuth.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/contexts/CurrentUserContext.js",[],["84","85"],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Card.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/App.js",["86"],"import React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header'\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport * as apiAuth from '../utils/apiAuth';\nimport { getToken, removeToken } from '../utils/token';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport '../App.css';\n\n\nfunction App() {\n    const history = useHistory();\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isInfoTooltip, setInfoTooltip] = React.useState(false);\n    const [toolTipPopup, setToolTipPopup] = React.useState({});\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n    const [cards, setCards] = React.useState([])\n\n    const handleEditAvatarClick = () => { setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen); }\n    const handleEditProfileClick = () => { setIsEditProfilePopupOpen(!isEditProfilePopupOpen); }\n    const handleAddPlaceClick = () => { setIsAddPlacePopupOpen(!isAddPlacePopupOpen); }\n    const handleCardClick = (card) => { setSelectedCard(card); }\n    const handleCardDeleteClick = (card) => {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((c) => c._id !== card._id));\n            })\n            .catch((err) => { console.log(err); });\n    }\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked)\n            api.addLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                })\n                .catch((err) => { console.log(err); });\n        if (isLiked)\n            api.deleteLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                })\n                .catch((err) => { console.log(err); });\n    }\n    const handleUpdateUser = (user) => {\n        api.setUserInfo(user.name, user.about)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: user.name,\n                    about: user.about,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const handleUpdateAvatar = (user) => {\n        api.updateAvatar(user.avatar)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: user.avatar,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const handleAddPlaceSubmit = (item) => {\n        api.addNewCard(item.name, item.link)\n            .then((newCard) => {\n                setCards(\n                    [newCard, ...cards]\n                );\n                closeAllPopups();\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const closeAllPopups = () => {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setSelectedCard(false)\n        setIsCardDeletePopupOpen(false)\n        setInfoTooltip(false)\n    }\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, res]) => {\n                setCurrentUser(user);\n                setCards(res)\n\n            })\n            .catch((err) => { console.log(err); })\n    }, [])\n\n    function onInfoTooltip(image, text) {\n        setToolTipPopup({\n            image: image,\n            text: text\n        })\n        setInfoTooltip(true)\n    }\n    const handleLogin = (email) => {\n        setLoggedIn(true);\n        setEmail(email);\n    };\n\n    const tokenCheck = () => {\n        const jwt = getToken();\n        if (!jwt) {\n            return;\n        }\n        apiAuth.checkToken(jwt)\n            .then((res) => {\n                if (res) {\n                    setEmail(res.email)\n                    setLoggedIn(true);\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n                if (err.status === 401) {\n                    console.log('Переданный токен некорректен');\n                } else if (err.status === 400) {\n                    console.log('Токен не передан или передан не в том формате');\n                }\n            });\n    }\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, []);\n\n    const onSignOut = () => {\n        removeToken()\n        history.push('/sign-in');\n        setEmail('');\n        setLoggedIn(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                {loggedIn ? <Header email={email} routePathName={'Выйти'} loggedIn={loggedIn} loggedOut={onSignOut} /> : ''}\n                <Switch>\n                    <Route path=\"/sign-up\">\n                        <Header routePathName={'Войти'} routePath={'/sign-in'} loggedIn={loggedIn} />\n                        <Register onInfoTooltip={onInfoTooltip} />\n                    </Route>\n                    <Route path=\"/sign-in\">\n                        <Header routePathName={'Регистрация'} routePath={'/sign-up'} loggedIn={loggedIn} />\n                        <Login onLogin={handleLogin} onInfoTooltip={onInfoTooltip} />\n                    </Route>\n                    <ProtectedRoute path=\"/\" loggedIn={loggedIn} component={Main}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        cards={cards}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDeleteClick}\n                        onCardLike={handleCardLike} />\n                </Switch>\n\n                <Route>\n                    {loggedIn === true ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                </Route>\n                <Footer />\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n                <PopupWithForm name=\"remove-card\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isCardDeletePopupOpen} onClose={closeAllPopups}\n                />\n                <ImagePopup name=\"images\" card={selectedCard} onClose={closeAllPopups} />\n                <InfoTooltip isOpen={isInfoTooltip} toolTipPopup={toolTipPopup} onClose={closeAllPopups}></InfoTooltip>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n\n}\n\nexport default App;\n",["87","88"],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Header.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Login.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/api.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/PopupWithForm.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/utils/token.js",[],["89","90"],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/Main.js",[],"/Users/dmitriipathos/Documents/GitHub/react-mesto-api-full/frontend/src/components/InfoTooltip.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":151,"column":8,"nodeType":"101","endLine":151,"endColumn":10,"suggestions":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","replacedBy":"104"},{"ruleId":"91","replacedBy":"105"},{"ruleId":"93","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],["107"],["108"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["109"],["107"],["108"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [tokenCheck]",{"range":"112","text":"113"},[5503,5505],"[tokenCheck]"]