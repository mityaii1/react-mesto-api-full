{"version":3,"sources":["images/header-logo.svg","components/Header.js","utils/token.js","utils/apiAuth.js","components/Register.js","components/Login.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","images/success.svg","images/unsuccess.svg","components/InfoTooltip.js","components/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","className","src","headerLogo","alt","loggedIn","email","onClick","loggedOut","href","routePath","routePathName","to","TOKEN_KEY","setToken","token","localStorage","setItem","BASE_URL","getResponseData","res","ok","json","Promise","reject","Register","React","useState","setEmail","password","setPassword","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","apiAuth","onInfoTooltip","push","catch","err","status","console","log","name","type","placeholder","required","onChange","evt","target","value","Login","data","setData","handleChange","prevData","onLogin","id","CurrentUserContext","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","aria-label","link","onCardClick","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","api","options","this","_baseUrl","baseUrl","_headers","Error","_getResponseData","fullName","aboutMe","nameCard","linkToImage","elemId","newAvatar","authorization","getItem","PopupWithForm","isOpen","onClose","title","children","buttonText","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","ImagePopup","InfoTooltip","toolTipPopup","image","success","unsuccess","text","ProtectedRoute","Component","component","App","setLoggedIn","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isInfoTooltip","setInfoTooltip","setToolTipPopup","selectedCard","setSelectedCard","isCardDeletePopupOpen","setIsCardDeletePopupOpen","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","user","tokenCheck","jwt","Provider","removeItem","path","deleteCard","filter","c","addLike","newCard","newCards","deleteLike","updateAvatar","setUserInfo","item","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9100ac01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.a307e1c4.svg\";","import React from 'react';\nimport headerLogo from '../images/header-logo.svg';\nimport { Link } from 'react-router-dom';\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Лого\" />\n            { props.loggedIn ?\n                <div className=\"header__auth\">\n                    <p className=\"header__auth_email\">{props.email}</p>\n                    <a className=\"header__auth_link-exit transparent\" onClick={props.loggedOut} href={props.routePath}>{props.routePathName}</a>\n                </div>\n                :\n                <div className=\"header__auth\">\n                    <Link to={props.routePath} className=\"header__auth_link transparent\">{props.routePathName}</Link>\n                </div>\n            }\n        </header>\n        \n    );\n}\n\nexport default Header;\n","const TOKEN_KEY = 'jwt';\n\nexport const setToken = (token) => {\n  localStorage.setItem(TOKEN_KEY, token);\n}\n\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\n\nexport const removeToken = () => {\n  localStorage.removeItem(TOKEN_KEY)\n}\n","import { setToken } from './token';\n\nexport const BASE_URL = 'http://kusto.students.nomoreparties.xyz';\n\nfunction getResponseData(res) {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(res);\n}\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    })\n        .then(getResponseData)\n}\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    })\n        .then(getResponseData)\n        .then((data) => {\n            if (data) {\n                setToken(data);\n                return data;\n            } else {\n                return;\n            }\n        })\n\n}\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        },\n    })\n        .then(getResponseData)\n}\n\n\n","import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport * as apiAuth from '../utils/apiAuth';\n\nfunction Register(props) {\n    const [email, setEmail] = React.useState('')\n    const [password, setPassword] = React.useState('')\n    const history = useHistory();\n\n    function handleChangeEmail(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handleChangePassword(evt) {\n        setPassword(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        apiAuth.register(email, password)\n            .then((res) => {\n                if (res) {\n                    props.onInfoTooltip(true, 'Вы успешно зарегистрировались!')\n                    history.push('/sign-in');\n                }\n            })\n            .catch((err) => {\n                if (err.status === 400) {\n                    console.log('Hекорректно заполнено одно из полей')\n                } else {\n                    console.log(err)\n                }\n                props.onInfoTooltip(false, 'Что-то пошло не так! Попробуйте ещё раз.')\n            })\n    }\n\n    return (\n        <div className=\"register\">\n            <h1 className=\"register__title\">Регистрация</h1>\n            <form onSubmit={handleSubmit} className=\"register__form\">\n                <input name=\"email\" type=\"email\" className=\"register__input\"\n                    placeholder=\"Email\" required onChange={handleChangeEmail} />\n                <input name=\"password\" type=\"password\" className=\"register__input\"\n                    placeholder=\"Пароль\" required onChange={handleChangePassword} />\n                <button type=\"submit\" className=\"register__button-singup\">Зарегистрироваться</button>\n            </form>\n            <div className=\"register__auth\">\n                <p>Уже зарегистрированы?</p>\n                <Link to={'/sign-in'} className=\"register__auth_link transparent\">Войти</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Register;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { setToken } from '../utils/token';\nimport * as apiAuth from '../utils/apiAuth';\n\n\nfunction Login(props) {\n    const [data, setData] = React.useState({ email: '', password: '' });\n    const history = useHistory();\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { email, password } = data;\n        if (!email || !password) {\n            return;\n        }\n        apiAuth.authorize(email, password)\n            .then((data) => {\n                if (data) {\n                    setToken(data.token);\n                    setData({ email: '', password: '' });\n                    props.onLogin(email, password)\n                    history.push('/');\n                }\n            })\n            .catch((err) => {\n                if (err.status === 401) {\n                    console.log('Пользователь с email не найден')\n                } else if (err.status === 400) {\n                    console.log('Не передано одно из полей ')\n                } else {\n                    console.log(err)\n                }\n                props.onInfoTooltip(false, 'Что-то пошло не так! Попробуйте ещё раз.')\n                \n            })\n    }\n\n    return (\n        <div className=\"register\">\n            <h1 className=\"register__title\">Вход</h1>\n            <form onSubmit={handleSubmit} className=\"register__form\">\n                <input name=\"email\" id=\"email\" type=\"email\" className=\"register__input\"\n                    placeholder=\"Email\" required value={data.email} onChange={handleChange} />\n                <input name=\"password\" type=\"password\" className=\"register__input\"\n                    placeholder=\"Пароль\" required value={data.password} onChange={handleChange} />\n                <button type=\"submit\" className=\"register__button-singup\">Войти</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`element__button-like ${isLiked ? 'element__button-like_active' : ''}`);\n\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n    function handleCardDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n\n    return (\n        <div className=\"element\">\n            {isOwn ? (<button className=\"element__button-remove transparent\" onClick={handleCardDeleteClick} type=\"button\" aria-label=\"Удалить\"></button>) : ('')}\n            <img src={props.card.link} className=\"element__image\" alt={props.card.name} onClick={handleClick} />\n            <h3 className=\"element__title\">{props.card.name}</h3>\n            <button className={`card__like ${cardLikeButtonClassName} transparent`} onClick={handleLikeClick} type=\"button\" aria-label=\"Нравиться\"></button>\n            <span className=\"element__number-likes\">{props.card.likes.length}</span>\n        </div>\n    )\n}\nexport default Card;","import React from 'react';\n//import api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div onClick={props.onEditAvatar} className=\"profile__avatar-edit\" >\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар\" />\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__edit-form\">\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\n                        <button onClick={props.onEditProfile} className=\"profile__button profile__edit-button transparent\" type=\"button\"\n                            aria-label=\"Редактировать\">\n                        </button>\n                    </div>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button onClick={props.onAddPlace} className=\"profile__button profile__add-button transparent\" type=\"button\" aria-label=\"Добавить\">\n                </button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map((card) => <Card\n                    card={card}\n                    key={card._id}\n                    onCardClick={props.onCardClick}\n                    onCardDelete={props.onCardDelete}\n                    onCardLike={props.onCardLike}\n                />)}\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n    }\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    setUserInfo(fullName, aboutMe) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: fullName,\n                about: aboutMe\n            })\n        })\n            .then(this._getResponseData)\n    }\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    addNewCard(nameCard, linkToImage) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: nameCard,\n                link: linkToImage\n            })\n        })\n            .then(this._getResponseData)\n    }\n    deleteCard(elemId) {\n        return fetch(`${this._baseUrl}/cards/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._getResponseData)\n    }\n    addLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    deleteLike(elemId) {\n        return fetch(`${this._baseUrl}/cards/likes/${elemId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponseData)\n    }\n    updateAvatar(newAvatar) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: newAvatar\n            })\n        })\n            .then(this._getResponseData)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'http://kusto.students.nomoreparties.xyz',\n    headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <form className=\"popup__form\" name={props.name} onSubmit={props.onSubmit}>\n                    <button className=\"popup__close-icon transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <h2 className=\"popup__title\">{props.title}</h2>\n\n                    {props.children}\n\n                    <button type=\"submit\" className=\"popup__button-save\">{props.buttonText}</button>\n                </form>\n            </div>\n        </section>\n    )\n}\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n    return (\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"full_name\" type=\"text\" id=\"name-input\" className=\"popup__input popup__input_name\"\n                    placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"about_me\" type=\"text\" id=\"about-me-input\"\n                    className=\"popup__input popup__input_about-me\"\n                    placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\" value={description} onChange={handleChangeDescription} />\n                <span className=\"popup__input-error\" id=\"about-me-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm name=\"update-avatar\" title=\"Обновить аватар\" buttonText=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"link_to_avatar\" type=\"url\" id=\"link-input\" ref={avatarRef}\n                    className=\"popup__input popup__input_link-to-avatar\" placeholder=\"Ссылка на новый аватар\"\n                    required />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n\n        </PopupWithForm>\n    )\n}\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n    function handleChangeLink(evt) {\n        setLink(evt.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            link,\n        })\n    }\n\n    return (\n        <PopupWithForm name=\"card\" title=\"Новое место\" buttonText=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <div className=\"popup__field\">\n                <input name=\"name_card\" type=\"text\" id=\"card-input\"\n                    className=\"popup__input popup__input_name-card\" placeholder=\"Название\" required\n                    minLength=\"1\" maxLength=\"30\" value={name} onChange={handleChangeName} />\n                <span className=\"popup__input-error\" id=\"card-input-error\"></span>\n            </div>\n            <div className=\"popup__field\">\n                <input name=\"link_to_image\" type=\"url\" id=\"link-input\"\n                    className=\"popup__input popup__input_link-to-image\" placeholder=\"Ссылка на картинку\"\n                    required value={link} onChange={handleChangeLink} />\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\n            </div>\n        </PopupWithForm>\n    )\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction ImagePopup(props) {\n    if (!props.card) { return false }\n    else {\n        return (\n            <section className=\"popup popup_images popup_opened\">\n                <figure className=\"popup__container-image\">\n                    <button className=\"popup__close-icon popup__close-image transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                    </button>\n                    <img src={props.card.link} className=\"popup__preview\" alt={props.card.name} />\n                    <figcaption className=\"popup__title-image\">{props.card.name}</figcaption>\n                </figure>\n            </section>\n        )\n    }\n}\nexport default ImagePopup;","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/unsuccess.7c6a020b.svg\";","import React from 'react';\nimport success from '../images/success.svg';\nimport unsuccess from '../images/unsuccess.svg';\n\nfunction InfoTooltip(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__close-icon transparent\" onClick={props.onClose} type=\"button\" aria-label=\"Закрыть\">\n                </button>\n                <img className=\"popup__tool-tip-image\" src={props.toolTipPopup.image ? success : unsuccess} alt=\"Картинка\" />\n                <p className=\"popup__tool-tip-text\">{props.toolTipPopup.text}</p>\n            </div>\n        </section>\n    )\n}\n\nexport default InfoTooltip;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn === true ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;","import React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header'\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport * as apiAuth from '../utils/apiAuth';\nimport { getToken, removeToken } from '../utils/token';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport '../App.css';\n\n\nfunction App() {\n    const history = useHistory();\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [email, setEmail] = React.useState('');\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isInfoTooltip, setInfoTooltip] = React.useState(false);\n    const [toolTipPopup, setToolTipPopup] = React.useState({});\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [isCardDeletePopupOpen, setIsCardDeletePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n    const [cards, setCards] = React.useState([])\n\n    const handleEditAvatarClick = () => { setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen); }\n    const handleEditProfileClick = () => { setIsEditProfilePopupOpen(!isEditProfilePopupOpen); }\n    const handleAddPlaceClick = () => { setIsAddPlacePopupOpen(!isAddPlacePopupOpen); }\n    const handleCardClick = (card) => { setSelectedCard(card); }\n    const handleCardDeleteClick = (card) => {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((c) => c._id !== card._id));\n            })\n            .catch((err) => { console.log(err); });\n    }\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        if (!isLiked)\n            api.addLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                })\n                .catch((err) => { console.log(err); });\n        if (isLiked)\n            api.deleteLike(card._id)\n                .then((newCard) => {\n                    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                    setCards(newCards);\n                })\n                .catch((err) => { console.log(err); });\n    }\n    const handleUpdateUser = (user) => {\n        api.setUserInfo(user.name, user.about)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: user.name,\n                    about: user.about,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const handleUpdateAvatar = (user) => {\n        api.updateAvatar(user.avatar)\n            .then((user) => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: user.avatar,\n                })\n                closeAllPopups()\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const handleAddPlaceSubmit = (item) => {\n        api.addNewCard(item.name, item.link)\n            .then((newCard) => {\n                setCards(\n                    [newCard, ...cards]\n                );\n                closeAllPopups();\n            })\n            .catch((err) => { console.log(err); })\n    }\n    const closeAllPopups = () => {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setSelectedCard(false)\n        setIsCardDeletePopupOpen(false)\n        setInfoTooltip(false)\n    }\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, res]) => {\n                setCurrentUser(user);\n                setCards(res)\n\n            })\n            .catch((err) => { console.log(err); })\n    }, [])\n\n    function onInfoTooltip(image, text) {\n        setToolTipPopup({\n            image: image,\n            text: text\n        })\n        setInfoTooltip(true)\n    }\n    const handleLogin = (email) => {\n        setLoggedIn(true);\n        setEmail(email);\n    };\n\n    const tokenCheck = () => {\n        const jwt = getToken();\n        if (!jwt) {\n            return;\n        }\n        apiAuth.checkToken(jwt)\n            .then((res) => {\n                if (res) {\n                    setEmail(res.email)\n                    setLoggedIn(true);\n                    history.push('/')\n                }\n            })\n            .catch((err) => {\n                if (err.status === 401) {\n                    console.log('Переданный токен некорректен');\n                } else if (err.status === 400) {\n                    console.log('Токен не передан или передан не в том формате');\n                }\n            });\n    }\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, []);\n\n    const onSignOut = () => {\n        removeToken()\n        history.push('/sign-in');\n        setEmail('');\n        setLoggedIn(false);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                {loggedIn ? <Header email={email} routePathName={'Выйти'} loggedIn={loggedIn} loggedOut={onSignOut} /> : ''}\n                <Switch>\n                    <Route path=\"/sign-up\">\n                        <Header routePathName={'Войти'} routePath={'/sign-in'} loggedIn={loggedIn} />\n                        <Register onInfoTooltip={onInfoTooltip} />\n                    </Route>\n                    <Route path=\"/sign-in\">\n                        <Header routePathName={'Регистрация'} routePath={'/sign-up'} loggedIn={loggedIn} />\n                        <Login onLogin={handleLogin} onInfoTooltip={onInfoTooltip} />\n                    </Route>\n                    <ProtectedRoute path=\"/\" loggedIn={loggedIn} component={Main}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        cards={cards}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDeleteClick}\n                        onCardLike={handleCardLike} />\n                </Switch>\n\n                <Route>\n                    {loggedIn === true ? <Redirect to='/' /> : <Redirect to='/sign-in' />}\n                </Route>\n                <Footer />\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n                <PopupWithForm name=\"remove-card\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isCardDeletePopupOpen} onClose={closeAllPopups}\n                />\n                <ImagePopup name=\"images\" card={selectedCard} onClose={closeAllPopups} />\n                <InfoTooltip isOpen={isInfoTooltip} toolTipPopup={toolTipPopup} onClose={closeAllPopups}></InfoTooltip>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}